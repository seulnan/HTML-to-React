{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\05_react\\\\packages\\\\06_tic_tac_toe\\\\src\\\\components\\\\GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Board from './Board';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GamePage({\n  gameMode,\n  playerSymbol\n}) {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [currentTurn, setCurrentTurn] = useState('X');\n  const [scores, setScores] = useState({\n    wins: 0,\n    draws: 0\n  });\n  const [gameResult, setGameResult] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false); // 모달 상태\n\n  const computerSymbol = playerSymbol === 'X' ? 'O' : 'X';\n  useEffect(() => {\n    const storedScores = JSON.parse(localStorage.getItem('ticTacToeScores')) || {\n      wins: 0,\n      draws: 0\n    };\n    setScores(storedScores);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('ticTacToeScores', JSON.stringify(scores));\n  }, [scores]);\n  const handleGameEnd = result => {\n    if (result === 'DRAW') {\n      setScores(prev => ({\n        ...prev,\n        draws: prev.draws + 1\n      }));\n    } else if (result === playerSymbol) {\n      setScores(prev => ({\n        ...prev,\n        wins: prev.wins + 1\n      }));\n    }\n    setGameResult(result);\n    setIsModalOpen(true); // 게임 결과 발생 시 모달 열기\n  };\n  const resetBoard = () => {\n    setBoard(Array(9).fill(null));\n    setGameResult(null);\n    setCurrentTurn('X');\n    setIsModalOpen(false); // 모달 닫기\n  };\n  const quitGame = () => {\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [currentTurn, \" Turn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetBoard,\n        children: \"\\uC0C8\\uB85C\\uACE0\\uCE68\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      board: board,\n      setBoard: setBoard,\n      currentTurn: currentTurn,\n      setCurrentTurn: setCurrentTurn,\n      onGameEnd: handleGameEnd,\n      gameMode: gameMode,\n      playerSymbol: playerSymbol,\n      computerSymbol: computerSymbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2B9\\uB9AC: \", scores.wins]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uBB34\\uC2B9\\uBD80: \", scores.draws]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      result: gameResult,\n      onClose: quitGame,\n      onNextRound: resetBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"71TDHxYLufnYvqY80D7/Nd1Vdgg=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","Board","Modal","jsxDEV","_jsxDEV","GamePage","gameMode","playerSymbol","_s","board","setBoard","Array","fill","currentTurn","setCurrentTurn","scores","setScores","wins","draws","gameResult","setGameResult","isModalOpen","setIsModalOpen","computerSymbol","storedScores","JSON","parse","localStorage","getItem","setItem","stringify","handleGameEnd","result","prev","resetBoard","quitGame","window","location","reload","children","style","display","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onGameEnd","isOpen","onClose","onNextRound","_c","$RefreshReg$"],"sources":["C:/web/05_react/packages/06_tic_tac_toe/src/components/GamePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Board from './Board';\r\nimport Modal from './Modal';\r\n\r\nfunction GamePage({ gameMode, playerSymbol }) {\r\n  const [board, setBoard] = useState(Array(9).fill(null));\r\n  const [currentTurn, setCurrentTurn] = useState('X');\r\n  const [scores, setScores] = useState({ wins: 0, draws: 0 });\r\n  const [gameResult, setGameResult] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // 모달 상태\r\n\r\n  const computerSymbol = playerSymbol === 'X' ? 'O' : 'X';\r\n\r\n  useEffect(() => {\r\n    const storedScores = JSON.parse(localStorage.getItem('ticTacToeScores')) || { wins: 0, draws: 0 };\r\n    setScores(storedScores);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('ticTacToeScores', JSON.stringify(scores));\r\n  }, [scores]);\r\n\r\n  const handleGameEnd = (result) => {\r\n    if (result === 'DRAW') {\r\n      setScores((prev) => ({ ...prev, draws: prev.draws + 1 }));\r\n    } else if (result === playerSymbol) {\r\n      setScores((prev) => ({ ...prev, wins: prev.wins + 1 }));\r\n    }\r\n    setGameResult(result);\r\n    setIsModalOpen(true); // 게임 결과 발생 시 모달 열기\r\n  };\r\n\r\n  const resetBoard = () => {\r\n    setBoard(Array(9).fill(null));\r\n    setGameResult(null);\r\n    setCurrentTurn('X');\r\n    setIsModalOpen(false); // 모달 닫기\r\n  };\r\n\r\n  const quitGame = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2>{currentTurn} Turn</h2>\r\n        <button onClick={resetBoard}>새로고침</button>\r\n      </div>\r\n      <Board\r\n        board={board}\r\n        setBoard={setBoard}\r\n        currentTurn={currentTurn}\r\n        setCurrentTurn={setCurrentTurn}\r\n        onGameEnd={handleGameEnd}\r\n        gameMode={gameMode}\r\n        playerSymbol={playerSymbol}\r\n        computerSymbol={computerSymbol}\r\n      />\r\n      <div>\r\n        <p>승리: {scores.wins}</p>\r\n        <p>무승부: {scores.draws}</p>\r\n      </div>\r\n      {/* 모달 컴포넌트 */}\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        result={gameResult}\r\n        onClose={quitGame}\r\n        onNextRound={resetBoard}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GamePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}