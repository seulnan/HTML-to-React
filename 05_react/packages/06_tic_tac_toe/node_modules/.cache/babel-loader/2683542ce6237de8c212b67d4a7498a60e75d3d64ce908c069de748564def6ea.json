{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\05_react\\\\packages\\\\06_tic_tac_toe\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Board from './Board'; // Board 컴포넌트를 임포트합니다\n\n// 승자 체크 함수\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]); // 게임의 상태를 기록합니다.\n  const [currentMove, setCurrentMove] = useState(0); // 현재 턴\n  const [scores, setScores] = useState({\n    X: 0,\n    O: 0,\n    DRAW: 0\n  }); // 점수판\n  const [gameMode, setGameMode] = useState('PLAYER'); // 게임 모드 (PLAYER vs PLAYER, PLAYER vs COMPUTER)\n  const [playerSymbol, setPlayerSymbol] = useState('X'); // 플레이어의 기호 (X 또는 O)\n  const [computerSymbol, setComputerSymbol] = useState('O'); // 컴퓨터의 기호\n  const xIsNext = currentMove % 2 === 0; // X가 다음 턴인지 확인\n  const currentSquares = history[currentMove]; // 현재 게임판 상태\n\n  // 플레이어 턴과 컴퓨터 턴을 처리하는 함수\n  const handlePlay = nextSquares => {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  };\n\n  // 게임 초기화 (새 게임 시작)\n  const startNewGame = () => {\n    setHistory([Array(9).fill(null)]);\n    setCurrentMove(0);\n  };\n\n  // 게임 종료 후 점수 업데이트\n  const onGameEnd = winner => {\n    if (winner === 'X') {\n      setScores(prev => ({\n        ...prev,\n        X: prev.X + 1\n      }));\n    } else if (winner === 'O') {\n      setScores(prev => ({\n        ...prev,\n        O: prev.O + 1\n      }));\n    } else {\n      setScores(prev => ({\n        ...prev,\n        DRAW: prev.DRAW + 1\n      }));\n    }\n    startNewGame();\n  };\n\n  // 이전 게임으로 돌아가기\n  const jumpTo = nextMove => {\n    if (currentMove === nextMove) return;\n    setCurrentMove(nextMove);\n  };\n\n  // 승자가 결정되었을 때 게임 종료 여부를 확인\n  const winner = calculateWinner(currentSquares);\n  const status = winner ? 'Winner: ' + winner : 'Next player: ' + (xIsNext ? 'X' : 'O');\n\n  // 기록된 각 턴에 대해 버튼을 생성\n  const moves = history.map((squares, move) => {\n    const description = move > 0 ? 'Go to move #' + move : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        gameMode: gameMode,\n        playerSymbol: playerSymbol,\n        computerSymbol: computerSymbol,\n        onGameEnd: onGameEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Scores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"X: \", scores.X]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"O: \", scores.O]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Draws: \", scores.DRAW]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startNewGame,\n        children: \"Start New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"urKLmeOnYW+pct0hu1GwWwIFsZs=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Board","jsxDEV","_jsxDEV","calculateWinner","squares","lines","i","length","a","b","c","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","scores","setScores","X","O","DRAW","gameMode","setGameMode","playerSymbol","setPlayerSymbol","computerSymbol","setComputerSymbol","xIsNext","currentSquares","handlePlay","nextSquares","nextHistory","slice","startNewGame","onGameEnd","winner","prev","jumpTo","nextMove","status","moves","map","move","description","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","onPlay","_c","$RefreshReg$"],"sources":["C:/web/05_react/packages/06_tic_tac_toe/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Board from './Board'; // Board 컴포넌트를 임포트합니다\r\n\r\n// 승자 체크 함수\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default function Game() {\r\n  const [history, setHistory] = useState([Array(9).fill(null)]);  // 게임의 상태를 기록합니다.\r\n  const [currentMove, setCurrentMove] = useState(0);  // 현재 턴\r\n  const [scores, setScores] = useState({ X: 0, O: 0, DRAW: 0 });  // 점수판\r\n  const [gameMode, setGameMode] = useState('PLAYER');  // 게임 모드 (PLAYER vs PLAYER, PLAYER vs COMPUTER)\r\n  const [playerSymbol, setPlayerSymbol] = useState('X');  // 플레이어의 기호 (X 또는 O)\r\n  const [computerSymbol, setComputerSymbol] = useState('O');  // 컴퓨터의 기호\r\n  const xIsNext = currentMove % 2 === 0;  // X가 다음 턴인지 확인\r\n  const currentSquares = history[currentMove];  // 현재 게임판 상태\r\n\r\n  // 플레이어 턴과 컴퓨터 턴을 처리하는 함수\r\n  const handlePlay = (nextSquares) => {\r\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\r\n    setHistory(nextHistory);\r\n    setCurrentMove(nextHistory.length - 1);\r\n  };\r\n\r\n  // 게임 초기화 (새 게임 시작)\r\n  const startNewGame = () => {\r\n    setHistory([Array(9).fill(null)]);\r\n    setCurrentMove(0);\r\n  };\r\n\r\n  // 게임 종료 후 점수 업데이트\r\n  const onGameEnd = (winner) => {\r\n    if (winner === 'X') {\r\n      setScores((prev) => ({ ...prev, X: prev.X + 1 }));\r\n    } else if (winner === 'O') {\r\n      setScores((prev) => ({ ...prev, O: prev.O + 1 }));\r\n    } else {\r\n      setScores((prev) => ({ ...prev, DRAW: prev.DRAW + 1 }));\r\n    }\r\n    startNewGame();\r\n  };\r\n\r\n  // 이전 게임으로 돌아가기\r\n  const jumpTo = (nextMove) => {\r\n    if (currentMove === nextMove) return;\r\n    setCurrentMove(nextMove);\r\n  };\r\n\r\n  // 승자가 결정되었을 때 게임 종료 여부를 확인\r\n  const winner = calculateWinner(currentSquares);\r\n  const status = winner ? 'Winner: ' + winner : 'Next player: ' + (xIsNext ? 'X' : 'O');\r\n\r\n  // 기록된 각 턴에 대해 버튼을 생성\r\n  const moves = history.map((squares, move) => {\r\n    const description = move > 0 ? 'Go to move #' + move : 'Go to game start';\r\n    return (\r\n      <li key={move}>\r\n        <button onClick={() => jumpTo(move)}>{description}</button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        {/* 게임 보드 컴포넌트 */}\r\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} gameMode={gameMode} playerSymbol={playerSymbol} computerSymbol={computerSymbol} onGameEnd={onGameEnd} />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        {/* 게임 상태 및 점수판 */}\r\n        <div>{status}</div>\r\n        <div>\r\n          <h2>Scores</h2>\r\n          <p>X: {scores.X}</p>\r\n          <p>O: {scores.O}</p>\r\n          <p>Draws: {scores.DRAW}</p>\r\n        </div>\r\n        <ol>{moves}</ol>\r\n        <button onClick={startNewGame}>Start New Game</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}